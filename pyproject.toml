[project]
name = "daemons"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "arize-phoenix-otel>=0.12.1",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
    "openinference-instrumentation-smolagents>=0.1.4",
    "click>=8.2.1",
    "dotenv>=0.9.9",
    "fastapi[standard]>=0.115.14",
    "jira>=3.8.0",
    "numpy>=2.3.1",
    "smolagents[toolkit,litellm]>=1.20.0",
    "pydantic-settings",
    "opentelemetry-instrumentation-fastapi>=0.56b0",
    "loguru>=0.7.3",
]

[project.scripts]
daemons = "daemons.cli:cli"

[dependency-groups]
dev = [
    "ipython>=9.4.0",
    "pytest>=8.4.1",
    "ruff>=0.12.3",
    "ty>=0.0.1a14",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Ruff configuration - handles linting, formatting (black), and import sorting (isort)
[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long (handled by ruff format)
    "S101",  # use of assert detected (pytest uses asserts)
    "T201",  # `print` found
    "UP031", # Use format specifiers instead of percent format
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["daemons"]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S", "T20"]  # Disable bandit and print checks in tests

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
